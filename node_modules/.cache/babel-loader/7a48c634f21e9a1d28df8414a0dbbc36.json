{"ast":null,"code":"var _jsxFileName = \"/Users/barihossain/Sites/react-todo/src/components/TasksCheckAll.jsx\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TasksCheckAll extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: TaskStore.completeAllTasks,\n        checked: TaskStore.isAllCompleted()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this), \" \", \"Check All\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default _c = observer(TasksCheckAll);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/barihossain/Sites/react-todo/src/components/TasksCheckAll.jsx"],"names":["React","Component","observer","TaskStore","TasksCheckAll","render","completeAllTasks","isAllCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACrCI,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACC;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,QAAQ,EAAEF,SAAS,CAACG,gBAFrB;AAGC,QAAA,OAAO,EAAEH,SAAS,CAACI,cAAV;AAHV;AAAA;AAAA;AAAA;AAAA,cADD,EAKI,GALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AAZoC;;AAetC,oBAAeL,QAAQ,CAACE,aAAD,CAAvB","sourcesContent":["import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\n\nclass TasksCheckAll extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonChange={TaskStore.completeAllTasks}\n\t\t\t\t\tchecked={TaskStore.isAllCompleted()}\n\t\t\t\t/>{\" \"}\n\t\t\t\tCheck All\n\t\t\t</label>\n\t\t);\n\t}\n}\n\nexport default observer(TasksCheckAll);\n"]},"metadata":{},"sourceType":"module"}