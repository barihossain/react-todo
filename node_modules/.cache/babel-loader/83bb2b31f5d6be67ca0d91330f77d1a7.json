{"ast":null,"code":"var _jsxFileName = \"/Users/barihossain/Sites/react-todo/src/components/App.js\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"../App.css\";\nimport React, { Component } from \"react\";\nimport TasksRemaining from \"./TasksRemaining\";\nimport TaskItem from \"./TaskItem\";\nimport TasksCheckAll from \"./TasksCheckAll\";\nimport TasksFilters from \"./TasksFilters\";\nimport TasksClearCompleted from \"./TasksClearCompleted\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      idForNewTask: 3,\n      filter: \"all\",\n      tasks: []\n    };\n\n    this.doneEdit = (task, event) => {\n      event.persist();\n      task.editing = false;\n      let newTitle = event.target.value;\n      if (newTitle.trim().length !== 0) task.title = newTitle;\n      let tasks = [...this.state.tasks];\n      let index = tasks.findIndex(t => t.id === task.id);\n      tasks.splice(index, 1, task);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.doneEditOnOtherKeys = (task, event) => {\n      if (event.key === \"Enter\") {\n        this.doneEdit(task, event);\n      } else if (event.key === \"Escape\") {\n        this.changeTaskEditing(task);\n      }\n    };\n\n    this.remainingCount = () => {\n      return this.state.tasks.filter(task => !task.isComplete).length;\n    };\n\n    this.isAllCompleted = () => {\n      return this.remainingCount() === 0;\n    };\n\n    this.completedCount = () => {\n      return this.state.tasks.filter(task => task.isComplete).length;\n    };\n\n    this.clearCompleted = () => {\n      let tasks = [...this.state.tasks];\n      tasks = tasks.filter(task => !task.isComplete);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.updateFilter = filter => {\n      this.setState({\n        filter: filter\n      });\n    };\n\n    this.tasksFiltered = () => {\n      let tasks = [...this.state.tasks];\n\n      if (this.state.filter === \"all\") {\n        return tasks;\n      } else if (this.state.filter === \"active\") {\n        return tasks.filter(task => !task.isComplete);\n      } else if (this.state.filter === \"completed\") {\n        return tasks.filter(task => task.isComplete);\n      }\n\n      return tasks;\n    };\n\n    this.completeAllTasks = event => {\n      event.persist();\n      let tasks = [...this.state.tasks];\n      tasks.forEach(todo => todo.isComplete = event.target.checked);\n      this.setState({\n        tasks\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 mb-4 bg-light rounded-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid py-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-5 fw-bold text-center mb-5\",\n              children: \"ToDo List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"new-task w-100 p-2 mb-4 font-weight-light\",\n              placeholder: \"Enter new task here\",\n              ref: TaskStore.newTaskInput,\n              onKeyUp: TaskStore.addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 8\n            }, this), this.tasksFiltered().length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-primary\",\n              role: \"alert\",\n              children: [\"No\", \" \", this.state.filter !== \"all\" ? this.state.filter : \"\", \" \", \"tasks found\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this), TaskStore.tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n              task: task,\n              completeTask: TaskStore.completeTask,\n              deleteTask: TaskStore.deleteTask,\n              changeTaskEditing: TaskStore.changeTaskEditing,\n              doneEdit: this.doneEdit,\n              doneEditOnOtherKeys: this.doneEditOnOtherKeys\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(TasksCheckAll, {\n                length: this.state.tasks.length,\n                completeAllTasks: this.completeAllTasks,\n                checked: this.isAllCompleted()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(TasksRemaining, {\n                remaining: this.remainingCount()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\",\n              children: [/*#__PURE__*/_jsxDEV(TasksFilters, {\n                filter: this.state.filter,\n                updateFilter: this.updateFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 9\n              }, this), this.completedCount() > 0 && /*#__PURE__*/_jsxDEV(TasksClearCompleted, {\n                clearCompleted: this.clearCompleted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this);\n  }\n  /*\n  //\"start\": \"react-scripts start\",\n     //\"build\": \"react-scripts build\",\n     //\"test\": \"react-scripts test\",\n  */\n\n\n}\n\nexport default _c = observer(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/barihossain/Sites/react-todo/src/components/App.js"],"names":["React","Component","TasksRemaining","TaskItem","TasksCheckAll","TasksFilters","TasksClearCompleted","observer","TaskStore","App","state","idForNewTask","filter","tasks","doneEdit","task","event","persist","editing","newTitle","target","value","trim","length","title","index","findIndex","t","id","splice","setState","doneEditOnOtherKeys","key","changeTaskEditing","remainingCount","isComplete","isAllCompleted","completedCount","clearCompleted","updateFilter","tasksFiltered","completeAllTasks","forEach","todo","checked","render","newTaskInput","addTask","map","completeTask","deleteTask"],"mappings":";AAAA,OAAO,kCAAP;AACA,OAAO,2CAAP;AACA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAiF3BS,KAjF2B,GAiFnB;AACPC,MAAAA,YAAY,EAAE,CADP;AAEPC,MAAAA,MAAM,EAAE,KAFD;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAjFmB;;AAAA,SAyI3BC,QAzI2B,GAyIhB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3BA,MAAAA,KAAK,CAACC,OAAN;AACAF,MAAAA,IAAI,CAACG,OAAL,GAAe,KAAf;AACA,UAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAaC,KAA5B;AAEA,UAAIF,QAAQ,CAACG,IAAT,GAAgBC,MAAhB,KAA2B,CAA/B,EAAkCR,IAAI,CAACS,KAAL,GAAaL,QAAb;AAElC,UAAIN,KAAK,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWG,KAAf,CAAZ;AACA,UAAIY,KAAK,GAAGZ,KAAK,CAACa,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASb,IAAI,CAACa,EAArC,CAAZ;AAEAf,MAAAA,KAAK,CAACgB,MAAN,CAAaJ,KAAb,EAAoB,CAApB,EAAuBV,IAAvB;AAEA,WAAKe,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACA,KAtJ0B;;AAAA,SAwJ3BkB,mBAxJ2B,GAwJL,CAAChB,IAAD,EAAOC,KAAP,KAAiB;AACtC,UAAIA,KAAK,CAACgB,GAAN,KAAc,OAAlB,EAA2B;AAC1B,aAAKlB,QAAL,CAAcC,IAAd,EAAoBC,KAApB;AACA,OAFD,MAEO,IAAIA,KAAK,CAACgB,GAAN,KAAc,QAAlB,EAA4B;AAClC,aAAKC,iBAAL,CAAuBlB,IAAvB;AACA;AACD,KA9J0B;;AAAA,SAgK3BmB,cAhK2B,GAgKV,MAAM;AACtB,aAAO,KAAKxB,KAAL,CAAWG,KAAX,CAAiBD,MAAjB,CAAyBG,IAAD,IAAU,CAACA,IAAI,CAACoB,UAAxC,EAAoDZ,MAA3D;AACA,KAlK0B;;AAAA,SAoK3Ba,cApK2B,GAoKV,MAAM;AACtB,aAAO,KAAKF,cAAL,OAA0B,CAAjC;AACA,KAtK0B;;AAAA,SAwK3BG,cAxK2B,GAwKV,MAAM;AACtB,aAAO,KAAK3B,KAAL,CAAWG,KAAX,CAAiBD,MAAjB,CAAyBG,IAAD,IAAUA,IAAI,CAACoB,UAAvC,EAAmDZ,MAA1D;AACA,KA1K0B;;AAAA,SA4K3Be,cA5K2B,GA4KV,MAAM;AACtB,UAAIzB,KAAK,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWG,KAAf,CAAZ;AAEAA,MAAAA,KAAK,GAAGA,KAAK,CAACD,MAAN,CAAcG,IAAD,IAAU,CAACA,IAAI,CAACoB,UAA7B,CAAR;AAEA,WAAKL,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACA,KAlL0B;;AAAA,SAoL3B0B,YApL2B,GAoLX3B,MAAD,IAAY;AAC1B,WAAKkB,QAAL,CAAc;AAAElB,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACA,KAtL0B;;AAAA,SAwL3B4B,aAxL2B,GAwLX,MAAM;AACrB,UAAI3B,KAAK,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWG,KAAf,CAAZ;;AAEA,UAAI,KAAKH,KAAL,CAAWE,MAAX,KAAsB,KAA1B,EAAiC;AAChC,eAAOC,KAAP;AACA,OAFD,MAEO,IAAI,KAAKH,KAAL,CAAWE,MAAX,KAAsB,QAA1B,EAAoC;AAC1C,eAAOC,KAAK,CAACD,MAAN,CAAcG,IAAD,IAAU,CAACA,IAAI,CAACoB,UAA7B,CAAP;AACA,OAFM,MAEA,IAAI,KAAKzB,KAAL,CAAWE,MAAX,KAAsB,WAA1B,EAAuC;AAC7C,eAAOC,KAAK,CAACD,MAAN,CAAcG,IAAD,IAAUA,IAAI,CAACoB,UAA5B,CAAP;AACA;;AAED,aAAOtB,KAAP;AACA,KApM0B;;AAAA,SAsM3B4B,gBAtM2B,GAsMPzB,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACC,OAAN;AAEA,UAAIJ,KAAK,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWG,KAAf,CAAZ;AACAA,MAAAA,KAAK,CAAC6B,OAAN,CAAeC,IAAD,IAAWA,IAAI,CAACR,UAAL,GAAkBnB,KAAK,CAACI,MAAN,CAAawB,OAAxD;AAEA,WAAKd,QAAL,CAAc;AAAEjB,QAAAA;AAAF,OAAd;AACA,KA7M0B;AAAA;;AAC3BgC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACC;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,iCACC;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACC;AAAI,cAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAIC;AACC,cAAA,IAAI,EAAC,MADN;AAEC,cAAA,SAAS,EAAC,2CAFX;AAGC,cAAA,WAAW,EAAC,qBAHb;AAIC,cAAA,GAAG,EAAErC,SAAS,CAACsC,YAJhB;AAKC,cAAA,OAAO,EAAEtC,SAAS,CAACuC;AALpB;AAAA;AAAA;AAAA;AAAA,oBAJD,EAWE,KAAKP,aAAL,GAAqBjB,MAArB,KAAgC,CAAhC,iBACA;AACC,cAAA,SAAS,EAAC,qBADX;AAEC,cAAA,IAAI,EAAC,OAFN;AAAA,+BAII,GAJJ,EAKE,KAAKb,KAAL,CAAWE,MAAX,KAAsB,KAAtB,GACE,KAAKF,KAAL,CAAWE,MADb,GAEE,EAPJ,EAOQ,GAPR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,EAuBEJ,SAAS,CAACK,KAAV,CAAgBmC,GAAhB,CAAqBjC,IAAD,iBACpB,QAAC,QAAD;AAEC,cAAA,IAAI,EAAEA,IAFP;AAGC,cAAA,YAAY,EAAEP,SAAS,CAACyC,YAHzB;AAIC,cAAA,UAAU,EAAEzC,SAAS,CAAC0C,UAJvB;AAKC,cAAA,iBAAiB,EAChB1C,SAAS,CAACyB,iBANZ;AAQC,cAAA,QAAQ,EAAE,KAAKnB,QARhB;AASC,cAAA,mBAAmB,EAClB,KAAKiB;AAVP,eACMhB,IAAI,CAACa,EADX;AAAA;AAAA;AAAA;AAAA,oBADA,CAvBF,eAuCC;AAAK,cAAA,SAAS,EAAC,wFAAf;AAAA,sCACC,QAAC,aAAD;AACC,gBAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWG,KAAX,CAAiBU,MAD1B;AAEC,gBAAA,gBAAgB,EAAE,KAAKkB,gBAFxB;AAGC,gBAAA,OAAO,EAAE,KAAKL,cAAL;AAHV;AAAA;AAAA;AAAA;AAAA,sBADD,eAOC,QAAC,cAAD;AACC,gBAAA,SAAS,EAAE,KAAKF,cAAL;AADZ;AAAA;AAAA;AAAA;AAAA,sBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvCD,eAkDC;AAAK,cAAA,SAAS,EAAC,wFAAf;AAAA,sCACC,QAAC,YAAD;AACC,gBAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWE,MADpB;AAEC,gBAAA,YAAY,EAAE,KAAK2B;AAFpB;AAAA;AAAA;AAAA;AAAA,sBADD,EAME,KAAKF,cAAL,KAAwB,CAAxB,iBACA,QAAC,mBAAD;AACC,gBAAA,cAAc,EAAE,KAAKC;AADtB;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlDD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAuEA;AAED;AACD;AACA;AACA;AACA;;;AA/E4B;;AAgN5B,oBAAe/B,QAAQ,CAACE,GAAD,CAAvB","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"../App.css\";\nimport React, { Component } from \"react\";\nimport TasksRemaining from \"./TasksRemaining\";\nimport TaskItem from \"./TaskItem\";\nimport TasksCheckAll from \"./TasksCheckAll\";\nimport TasksFilters from \"./TasksFilters\";\nimport TasksClearCompleted from \"./TasksClearCompleted\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<div className=\"container py-4\">\n\t\t\t\t\t<div className=\"p-2 mb-4 bg-light rounded-3\">\n\t\t\t\t\t\t<div className=\"container-fluid py-5\">\n\t\t\t\t\t\t\t<h1 className=\"display-5 fw-bold text-center mb-5\">\n\t\t\t\t\t\t\t\tToDo List\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"new-task w-100 p-2 mb-4 font-weight-light\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter new task here\"\n\t\t\t\t\t\t\t\tref={TaskStore.newTaskInput}\n\t\t\t\t\t\t\t\tonKeyUp={TaskStore.addTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{this.tasksFiltered().length === 0 && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"alert alert-primary\"\n\t\t\t\t\t\t\t\t\trole=\"alert\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tNo{\" \"}\n\t\t\t\t\t\t\t\t\t{this.state.filter !== \"all\"\n\t\t\t\t\t\t\t\t\t\t? this.state.filter\n\t\t\t\t\t\t\t\t\t\t: \"\"}{\" \"}\n\t\t\t\t\t\t\t\t\ttasks found\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{TaskStore.tasks.map((task) => (\n\t\t\t\t\t\t\t\t<TaskItem\n\t\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\t\t\tcompleteTask={TaskStore.completeTask}\n\t\t\t\t\t\t\t\t\tdeleteTask={TaskStore.deleteTask}\n\t\t\t\t\t\t\t\t\tchangeTaskEditing={\n\t\t\t\t\t\t\t\t\t\tTaskStore.changeTaskEditing\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tdoneEdit={this.doneEdit}\n\t\t\t\t\t\t\t\t\tdoneEditOnOtherKeys={\n\t\t\t\t\t\t\t\t\t\tthis.doneEditOnOtherKeys\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t<div className=\"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\">\n\t\t\t\t\t\t\t\t<TasksCheckAll\n\t\t\t\t\t\t\t\t\tlength={this.state.tasks.length}\n\t\t\t\t\t\t\t\t\tcompleteAllTasks={this.completeAllTasks}\n\t\t\t\t\t\t\t\t\tchecked={this.isAllCompleted()}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<TasksRemaining\n\t\t\t\t\t\t\t\t\tremaining={this.remainingCount()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\">\n\t\t\t\t\t\t\t\t<TasksFilters\n\t\t\t\t\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\t\t\t\t\tupdateFilter={this.updateFilter}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{this.completedCount() > 0 && (\n\t\t\t\t\t\t\t\t\t<TasksClearCompleted\n\t\t\t\t\t\t\t\t\t\tclearCompleted={this.clearCompleted}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n\n\t/*\n\t//\"start\": \"react-scripts start\",\n    //\"build\": \"react-scripts build\",\n    //\"test\": \"react-scripts test\",\n\t*/\n\n\tstate = {\n\t\tidForNewTask: 3,\n\t\tfilter: \"all\",\n\t\ttasks: [],\n\t};\n\n\t//newTaskInput = React.createRef();\n\t// addTask = (event) => {\n\t// \tif (event.key === \"Enter\") {\n\t// \t\tconst newTaskTitle = this.newTaskInput.current.value;\n\n\t// \t\tlet tasks = [...this.state.tasks];\n\t// \t\tlet idForNewTask = this.state.idForNewTask + 1;\n\t// \t\ttasks.push({\n\t// \t\t\tid: idForNewTask,\n\t// \t\t\ttitle: newTaskTitle,\n\t// \t\t\tisComplete: false,\n\t// \t\t\tediting: false,\n\t// \t\t});\n\n\t// \t\tthis.setState({ tasks, idForNewTask });\n\n\t// \t\tthis.newTaskInput.current.value = \"\";\n\t// \t}\n\t// };\n\n\t// deleteTask = (id) => {\n\t// \tlet tasks = [...this.state.tasks];\n\n\t// \tlet index = tasks.findIndex((t) => t.id === id);\n\n\t// \ttasks.splice(index, 1);\n\n\t// \tthis.setState({ tasks });\n\t// };\n\n\t// completeTask = (task) => {\n\t// \ttask.isComplete = !task.isComplete;\n\t// \tlet tasks = [...this.state.tasks];\n\t// \tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t// \ttasks.splice(index, 1, task);\n\n\t// \tthis.setState({ tasks });\n\t// };\n\n\t// changeTaskEditing = (task) => {\n\t// \ttask.editing = !task.editing;\n\t// \tlet tasks = [...this.state.tasks];\n\t// \tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t// \ttasks.splice(index, 1, task);\n\n\t// \tthis.setState({ tasks });\n\t// };\n\n\tdoneEdit = (task, event) => {\n\t\tevent.persist();\n\t\ttask.editing = false;\n\t\tlet newTitle = event.target.value;\n\n\t\tif (newTitle.trim().length !== 0) task.title = newTitle;\n\n\t\tlet tasks = [...this.state.tasks];\n\t\tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t\ttasks.splice(index, 1, task);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tdoneEditOnOtherKeys = (task, event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tthis.doneEdit(task, event);\n\t\t} else if (event.key === \"Escape\") {\n\t\t\tthis.changeTaskEditing(task);\n\t\t}\n\t};\n\n\tremainingCount = () => {\n\t\treturn this.state.tasks.filter((task) => !task.isComplete).length;\n\t};\n\n\tisAllCompleted = () => {\n\t\treturn this.remainingCount() === 0;\n\t};\n\n\tcompletedCount = () => {\n\t\treturn this.state.tasks.filter((task) => task.isComplete).length;\n\t};\n\n\tclearCompleted = () => {\n\t\tlet tasks = [...this.state.tasks];\n\n\t\ttasks = tasks.filter((task) => !task.isComplete);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tupdateFilter = (filter) => {\n\t\tthis.setState({ filter: filter });\n\t};\n\n\ttasksFiltered = () => {\n\t\tlet tasks = [...this.state.tasks];\n\n\t\tif (this.state.filter === \"all\") {\n\t\t\treturn tasks;\n\t\t} else if (this.state.filter === \"active\") {\n\t\t\treturn tasks.filter((task) => !task.isComplete);\n\t\t} else if (this.state.filter === \"completed\") {\n\t\t\treturn tasks.filter((task) => task.isComplete);\n\t\t}\n\n\t\treturn tasks;\n\t};\n\n\tcompleteAllTasks = (event) => {\n\t\tevent.persist();\n\n\t\tlet tasks = [...this.state.tasks];\n\t\ttasks.forEach((todo) => (todo.isComplete = event.target.checked));\n\n\t\tthis.setState({ tasks });\n\t};\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}