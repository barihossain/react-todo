{"ast":null,"code":"var _jsxFileName = \"/Users/barihossain/Sites/react-todo/src/components/TaskList.jsx\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport React, { Component } from \"react\";\nimport TasksRemaining from \"./TasksRemaining\";\nimport TaskItem from \"./TaskItem\";\nimport TasksCheckAll from \"./TasksCheckAll\";\nimport TasksFilters from \"./TasksFilters\";\nimport TasksClearCompleted from \"./TasksClearCompleted\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends Component {\n  componentDidMount() {\n    TaskStore.updateFilter(\"all\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"new-task w-100 p-2 mb-4 font-weight-light\",\n        placeholder: \"Enter new task here\",\n        ref: TaskStore.newTaskInput,\n        onKeyUp: TaskStore.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), TaskStore.tasksFiltered.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-primary\",\n        role: \"alert\",\n        children: [\"No \", TaskStore.filter !== \"all\" ? TaskStore.filter : \"\", \" \", \"tasks found\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), TaskStore.tasksFiltered.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\",\n        children: [/*#__PURE__*/_jsxDEV(TasksCheckAll, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TasksRemaining, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\",\n        children: [/*#__PURE__*/_jsxDEV(TasksFilters, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), TaskStore.completedCount > 0 && /*#__PURE__*/_jsxDEV(TasksClearCompleted, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default _c = observer(TaskList);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/barihossain/Sites/react-todo/src/components/TaskList.jsx"],"names":["React","Component","TasksRemaining","TaskItem","TasksCheckAll","TasksFilters","TasksClearCompleted","observer","TaskStore","TaskList","componentDidMount","updateFilter","render","newTaskInput","addTask","tasksFiltered","length","filter","map","task","id","completedCount"],"mappings":";AAAA,OAAO,kCAAP;AACA,OAAO,2CAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAChCS,EAAAA,iBAAiB,GAAG;AACnBF,IAAAA,SAAS,CAACG,YAAV,CAAuB,KAAvB;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,KAAD,CAAO,QAAP;AAAA,8BACC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,SAAS,EAAC,2CAFX;AAGC,QAAA,WAAW,EAAC,qBAHb;AAIC,QAAA,GAAG,EAAEJ,SAAS,CAACK,YAJhB;AAKC,QAAA,OAAO,EAAEL,SAAS,CAACM;AALpB;AAAA;AAAA;AAAA;AAAA,cADD,EAQEN,SAAS,CAACO,aAAV,CAAwBC,MAAxB,KAAmC,CAAnC,iBACA;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAqC,QAAA,IAAI,EAAC,OAA1C;AAAA,0BACKR,SAAS,CAACS,MAAV,KAAqB,KAArB,GAA6BT,SAAS,CAACS,MAAvC,GAAgD,EADrD,EACyD,GADzD;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAcET,SAAS,CAACO,aAAV,CAAwBG,GAAxB,CAA6BC,IAAD,iBAC5B,QAAC,QAAD;AAAwB,QAAA,IAAI,EAAEA;AAA9B,SAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,cADA,CAdF,eAkBC;AAAK,QAAA,SAAS,EAAC,wFAAf;AAAA,gCACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBD,eAuBC;AAAK,QAAA,SAAS,EAAC,wFAAf;AAAA,gCACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADD,EAGEZ,SAAS,CAACa,cAAV,GAA2B,CAA3B,iBAAgC,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA+BA;;AArC+B;;AAwCjC,oBAAed,QAAQ,CAACE,QAAD,CAAvB","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nimport React, { Component } from \"react\";\nimport TasksRemaining from \"./TasksRemaining\";\nimport TaskItem from \"./TaskItem\";\nimport TasksCheckAll from \"./TasksCheckAll\";\nimport TasksFilters from \"./TasksFilters\";\nimport TasksClearCompleted from \"./TasksClearCompleted\";\nimport { observer } from \"mobx-react\";\nimport TaskStore from \"../stores/TaskStore\";\n\nclass TaskList extends Component {\n\tcomponentDidMount() {\n\t\tTaskStore.updateFilter(\"all\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"new-task w-100 p-2 mb-4 font-weight-light\"\n\t\t\t\t\tplaceholder=\"Enter new task here\"\n\t\t\t\t\tref={TaskStore.newTaskInput}\n\t\t\t\t\tonKeyUp={TaskStore.addTask}\n\t\t\t\t/>\n\t\t\t\t{TaskStore.tasksFiltered.length === 0 && (\n\t\t\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\t\t\t\t\t\tNo {TaskStore.filter !== \"all\" ? TaskStore.filter : \"\"}{\" \"}\n\t\t\t\t\t\ttasks found\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t{TaskStore.tasksFiltered.map((task) => (\n\t\t\t\t\t<TaskItem key={task.id} task={task} />\n\t\t\t\t))}\n\n\t\t\t\t<div className=\"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\">\n\t\t\t\t\t<TasksCheckAll />\n\n\t\t\t\t\t<TasksRemaining />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"extra-container d-flex align-items-center justify-content-between mb-2 pt-3 border-top\">\n\t\t\t\t\t<TasksFilters />\n\n\t\t\t\t\t{TaskStore.completedCount > 0 && <TasksClearCompleted />}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default observer(TaskList);\n"]},"metadata":{},"sourceType":"module"}