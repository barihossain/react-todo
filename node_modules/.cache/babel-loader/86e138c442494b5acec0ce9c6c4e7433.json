{"ast":null,"code":"import { makeObservable, observable } from \"mobx\";\n\nclass TaskStore {\n  constructor() {\n    this.idForNewTask = 3;\n    this.filter = \"all\";\n    this.tasks = [{\n      id: 1,\n      title: \"First Task from MobX\",\n      isComplete: false,\n      editing: false\n    }, {\n      id: 2,\n      title: \"Second Task from MobX\",\n      isComplete: false,\n      editing: false\n    }];\n\n    this.addTask = event => {\n      if (event.key === \"Enter\") {\n        const newTaskTitle = this.newTaskInput.current.value;\n        let tasks = [...this.state.tasks];\n        let idForNewTask = this.state.idForNewTask + 1;\n        tasks.push({\n          id: idForNewTask,\n          title: newTaskTitle,\n          isComplete: false,\n          editing: false\n        });\n        this.setState({\n          tasks,\n          idForNewTask\n        });\n        this.newTaskInput.current.value = \"\";\n      }\n    };\n\n    makeObservable(this, {\n      idForNewTask: observable,\n      filter: observable,\n      tasks: observable\n    });\n  }\n\n}\n\nconst store = new TaskStore();\nexport default store;","map":{"version":3,"sources":["/Users/barihossain/Sites/react-todo/src/stores/TaskStore.js"],"names":["makeObservable","observable","TaskStore","constructor","idForNewTask","filter","tasks","id","title","isComplete","editing","addTask","event","key","newTaskTitle","newTaskInput","current","value","state","push","setState","store"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,QAA2C,MAA3C;;AACA,MAAMC,SAAN,CAAgB;AAqCfC,EAAAA,WAAW,GAAG;AAAA,SApCdC,YAoCc,GApCC,CAoCD;AAAA,SAnCdC,MAmCc,GAnCL,KAmCK;AAAA,SAlCdC,KAkCc,GAlCN,CACP;AACCC,MAAAA,EAAE,EAAE,CADL;AAECC,MAAAA,KAAK,EAAE,sBAFR;AAGCC,MAAAA,UAAU,EAAE,KAHb;AAICC,MAAAA,OAAO,EAAE;AAJV,KADO,EAOP;AACCH,MAAAA,EAAE,EAAE,CADL;AAECC,MAAAA,KAAK,EAAE,uBAFR;AAGCC,MAAAA,UAAU,EAAE,KAHb;AAICC,MAAAA,OAAO,EAAE;AAJV,KAPO,CAkCM;;AAAA,SAnBdC,OAmBc,GAnBHC,KAAD,IAAW;AACpB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AAC1B,cAAMC,YAAY,GAAG,KAAKC,YAAL,CAAkBC,OAAlB,CAA0BC,KAA/C;AAEA,YAAIX,KAAK,GAAG,CAAC,GAAG,KAAKY,KAAL,CAAWZ,KAAf,CAAZ;AACA,YAAIF,YAAY,GAAG,KAAKc,KAAL,CAAWd,YAAX,GAA0B,CAA7C;AACAE,QAAAA,KAAK,CAACa,IAAN,CAAW;AACVZ,UAAAA,EAAE,EAAEH,YADM;AAEVI,UAAAA,KAAK,EAAEM,YAFG;AAGVL,UAAAA,UAAU,EAAE,KAHF;AAIVC,UAAAA,OAAO,EAAE;AAJC,SAAX;AAOA,aAAKU,QAAL,CAAc;AAAEd,UAAAA,KAAF;AAASF,UAAAA;AAAT,SAAd;AAEA,aAAKW,YAAL,CAAkBC,OAAlB,CAA0BC,KAA1B,GAAkC,EAAlC;AACA;AACD,KAEa;;AACbjB,IAAAA,cAAc,CAAC,IAAD,EAAO;AACpBI,MAAAA,YAAY,EAAEH,UADM;AAEpBI,MAAAA,MAAM,EAAEJ,UAFY;AAGpBK,MAAAA,KAAK,EAAEL;AAHa,KAAP,CAAd;AAKA;;AA3Cc;;AA8ChB,MAAMoB,KAAK,GAAG,IAAInB,SAAJ,EAAd;AAEA,eAAemB,KAAf","sourcesContent":["import { makeObservable, observable } from \"mobx\";\nclass TaskStore {\n\tidForNewTask = 3;\n\tfilter = \"all\";\n\ttasks = [\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"First Task from MobX\",\n\t\t\tisComplete: false,\n\t\t\tediting: false,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"Second Task from MobX\",\n\t\t\tisComplete: false,\n\t\t\tediting: false,\n\t\t},\n\t];\n\n\taddTask = (event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tconst newTaskTitle = this.newTaskInput.current.value;\n\n\t\t\tlet tasks = [...this.state.tasks];\n\t\t\tlet idForNewTask = this.state.idForNewTask + 1;\n\t\t\ttasks.push({\n\t\t\t\tid: idForNewTask,\n\t\t\t\ttitle: newTaskTitle,\n\t\t\t\tisComplete: false,\n\t\t\t\tediting: false,\n\t\t\t});\n\n\t\t\tthis.setState({ tasks, idForNewTask });\n\n\t\t\tthis.newTaskInput.current.value = \"\";\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tmakeObservable(this, {\n\t\t\tidForNewTask: observable,\n\t\t\tfilter: observable,\n\t\t\ttasks: observable,\n\t\t});\n\t}\n}\n\nconst store = new TaskStore();\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}