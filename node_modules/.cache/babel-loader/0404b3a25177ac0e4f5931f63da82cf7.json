{"ast":null,"code":"var _jsxFileName = \"/Users/barihossain/Sites/react-todo/src/App.js\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      idForNewTask: 3,\n      tasks: []\n    };\n    this.newTaskInput = /*#__PURE__*/React.createRef();\n\n    this.addTask = event => {\n      if (event.key === \"Enter\") {\n        const newTaskTitle = this.newTaskInput.current.value;\n        let tasks = [...this.state.tasks];\n        let idForNewTask = this.state.idForNewTask + 1;\n        tasks.push({\n          id: idForNewTask,\n          title: newTaskTitle,\n          isComplete: false,\n          editing: false\n        });\n        this.setState({\n          tasks,\n          idForNewTask\n        });\n        this.newTaskInput.current.value = \"\";\n      }\n    };\n\n    this.deleteTask = id => {\n      let tasks = [...this.state.tasks];\n      let index = tasks.findIndex(t => t.id === id);\n      tasks.splice(index, 1);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.completeTask = task => {\n      task.isComplete = !task.isComplete;\n      let tasks = [...this.state.tasks];\n      let index = tasks.findIndex(t => t.id === task.id);\n      tasks.splice(index, 1, task);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.changeTaskEditing = task => {\n      task.editing = !task.editing;\n      let tasks = [...this.state.tasks];\n      let index = tasks.findIndex(t => t.id === task.id);\n      tasks.splice(index, 1, task);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.doneEdit = (task, event) => {\n      event.persist();\n      task.editing = false;\n      let newTitle = event.target.value;\n      if (newTitle.trim().length !== 0) task.title = newTitle;\n      let tasks = [...this.state.tasks];\n      let index = tasks.findIndex(t => t.id === task.id);\n      tasks.splice(index, 1, task);\n      this.setState({\n        tasks\n      });\n    };\n\n    this.doneEditOnEnter = (task, event) => {\n      if (event.key === \"Enter\") {\n        this.doneEdit(task, event);\n      } else if (event.key === \"Escape\") {\n        this.changeTaskEditing(task);\n      }\n    };\n\n    this.remainingCount = () => {\n      return this.state.tasks;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container py-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 mb-4 bg-light rounded-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid py-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-5 fw-bold text-center mb-5\",\n              children: \"ToDo List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"new-task w-100 p-2 mb-4 font-weight-light\",\n              placeholder: \"Enter new task here\",\n              ref: this.newTaskInput,\n              onKeyUp: this.addTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 8\n            }, this), this.state.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-between mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  role: \"button\",\n                  className: \"far\" + (task.isComplete ? \" fa-check-square\" : \" fa-square text-muted\"),\n                  onClick: () => this.completeTask(task)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 11\n                }, this), !task.editing && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 ml-4\" + (task.isComplete ? \" task-completed text-muted font-weight-lighter\" : \"\"),\n                  onDoubleClick: () => this.changeTaskEditing(task),\n                  children: task.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 12\n                }, this), task.editing && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  autoFocus: true,\n                  className: \"p-2 ml-4\",\n                  defaultValue: task.title,\n                  onBlur: event => this.doneEdit(task, event),\n                  onKeyUp: event => this.doneEditOnEnter(task, event)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-2\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  role: \"button\",\n                  className: \"fas fa-times text-muted\",\n                  onClick: () => this.deleteTask(task.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 10\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"extra-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !props.TodoStore.anyRemaining,\n                    onChange: props.TodoStore.checkAllTodos\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 11\n                  }, this), \" \", \"Check All\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"2 item left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/barihossain/Sites/react-todo/src/App.js"],"names":["React","Component","App","state","idForNewTask","tasks","newTaskInput","createRef","addTask","event","key","newTaskTitle","current","value","push","id","title","isComplete","editing","setState","deleteTask","index","findIndex","t","splice","completeTask","task","changeTaskEditing","doneEdit","persist","newTitle","target","trim","length","doneEditOnEnter","remainingCount","render","map","props","TodoStore","anyRemaining","checkAllTodos"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<div className=\"container py-4\">\n\t\t\t\t\t<div className=\"p-2 mb-4 bg-light rounded-3\">\n\t\t\t\t\t\t<div className=\"container-fluid py-5\">\n\t\t\t\t\t\t\t<h1 className=\"display-5 fw-bold text-center mb-5\">\n\t\t\t\t\t\t\t\tToDo List\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"new-task w-100 p-2 mb-4 font-weight-light\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter new task here\"\n\t\t\t\t\t\t\t\tref={this.newTaskInput}\n\t\t\t\t\t\t\t\tonKeyUp={this.addTask}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{this.state.tasks.map((task) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\t\tclassName=\"d-flex align-items-center justify-content-between mb-2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\"far\" +\n\t\t\t\t\t\t\t\t\t\t\t\t(task.isComplete\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \" fa-check-square\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \" fa-square text-muted\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.completeTask(task)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t\t\t{!task.editing && (\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"p-2 ml-4\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t(task.isComplete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \" task-completed text-muted font-weight-lighter\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tonDoubleClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.changeTaskEditing(task)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{task.title}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{task.editing && (\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"p-2 ml-4\"\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={task.title}\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur={(event) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.doneEdit(task, event)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyUp={(event) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.doneEditOnEnter(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttask,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tevent\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"ml-2\">\n\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-times text-muted\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\tthis.deleteTask(task.id)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t<div className=\"extra-container\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t!props.TodoStore.anyRemaining\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t\tprops.TodoStore.checkAllTodos\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t\t\t\tCheck All\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>2 item left</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t);\n\t}\n\n\tstate = {\n\t\tidForNewTask: 3,\n\t\ttasks: [],\n\t};\n\n\tnewTaskInput = React.createRef();\n\taddTask = (event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tconst newTaskTitle = this.newTaskInput.current.value;\n\n\t\t\tlet tasks = [...this.state.tasks];\n\t\t\tlet idForNewTask = this.state.idForNewTask + 1;\n\t\t\ttasks.push({\n\t\t\t\tid: idForNewTask,\n\t\t\t\ttitle: newTaskTitle,\n\t\t\t\tisComplete: false,\n\t\t\t\tediting: false,\n\t\t\t});\n\n\t\t\tthis.setState({ tasks, idForNewTask });\n\n\t\t\tthis.newTaskInput.current.value = \"\";\n\t\t}\n\t};\n\n\tdeleteTask = (id) => {\n\t\tlet tasks = [...this.state.tasks];\n\n\t\tlet index = tasks.findIndex((t) => t.id === id);\n\n\t\ttasks.splice(index, 1);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tcompleteTask = (task) => {\n\t\ttask.isComplete = !task.isComplete;\n\t\tlet tasks = [...this.state.tasks];\n\t\tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t\ttasks.splice(index, 1, task);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tchangeTaskEditing = (task) => {\n\t\ttask.editing = !task.editing;\n\t\tlet tasks = [...this.state.tasks];\n\t\tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t\ttasks.splice(index, 1, task);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tdoneEdit = (task, event) => {\n\t\tevent.persist();\n\t\ttask.editing = false;\n\t\tlet newTitle = event.target.value;\n\n\t\tif (newTitle.trim().length !== 0) task.title = newTitle;\n\n\t\tlet tasks = [...this.state.tasks];\n\t\tlet index = tasks.findIndex((t) => t.id === task.id);\n\n\t\ttasks.splice(index, 1, task);\n\n\t\tthis.setState({ tasks });\n\t};\n\n\tdoneEditOnEnter = (task, event) => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tthis.doneEdit(task, event);\n\t\t} else if (event.key === \"Escape\") {\n\t\t\tthis.changeTaskEditing(task);\n\t\t}\n\t};\n\n\tremainingCount = () => {\n\t\treturn this.state.tasks\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}